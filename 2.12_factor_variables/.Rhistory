install.packages('ggplot2', dependencies = TRUE)
install.packages('RColorBrewer', dependencies = TRUE)
library(ggplot2)
library(RColorBrewer)
detach("package:datasets", unload=TRUE)
library("datasets", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
detach("package:ggplot2", unload=TRUE)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
udacious
?c
numbers <- c(1:10)
numbers
numbers <- c(numbers, 11:20)
numbers
c(1,7:9)
numbers
c(1:5, 10.5, "next")
x <- 1:4
x
names(x) <- letters[1:4]
x
c(x)
as.vector(x)
dim(x) <- c(2,2)
x
?dim
x <- 1:12
x
dim(x)
dim(x) <- c(3,4)
x
x <- 1:12
x
dim(x) <- c(4,3)
x
?c
x <- 1:4;
names(x) <- letters[1:4]
x
dim(x) <- c(2,2)
x
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla", "Ariel Ma")
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla", "Ariel Ma")
mystery = nchar(udacious)
mystery
mystery == 11
udacious[mystery == 11]
data(mtcars)
?names
names(mtcars)
names(mtcars)
View(mtcars)
?mtcars
mtcars
str(mtcars)
?str
dim(mtcars)
# 10. Read the documentation for row.names if you're want to know more.
?row.names
# Run this code to see the current row names in the data frame.
row.names(mtcars)
# Run this code to change the row names of the cars to numbers.
row.names(mtcars) <- c(1:32)
# Now print out the data frame by running the code below.
mtcars
data(mtcars)
head(mtcars, 10)
# Now print out the data frame by running the code below.
mtcars
# The head() function prints out the first six rows of a data frame
# by default. Run the code below to see.
head(mtcars)
# I think you'll know what this does.
tail(mtcars, 3)
mtcars$mpg
# Print out any two other variables to the console.
mtcars$cyl
mtcars$hp
mean(mtcars$mpg)
install.packages("swirl")
library(swirl)
library(swirl)
swirl()
?mean
getwd()
setwd('~/arielma/data-analysis/lesson5_r_basic/2.10 Read and Subset Data')
setwd('~/arielma/data-analysis/lesson5_r_basic/2.10_read_and_subset_data')
setwd('~/data-analysis/lesson5_r_basic/2.10_read_and_subset_data')
stateInfo <- read.csv('stateData.csv')
View(stateInfo)
summary(mtcars)
mtcars
efficient <- mtcars[mtcars$mpg >=23, ]
efficient
nrow(efficient)
subset(mtcars, mpg > 30 & hp > 100)
mtcars
subset(mtcars, qsec <= 16.9)
lightCars <- subset(mtcars, wt <2)
lightCars <- subset(mtcars, wt <2)
lgihtCars
lightCars <- subset(mtcars, wt < 2)
lightCars
mtcars$year <- 1974
View(mtcars)
View(mtcars)
mtcars <- subset(mtcars, select = -year)
View(mtcars)
mtcars$year <- 1974
mtcars$comment <- ariel
mtcars$comment <- 'ariel'
mtcars <- subset(mtcars, select = -year, -comment)
mtcars <- subset(mtcars, select = -(year, -comment)
mtcars <- subset(mtcars, select = -c(year, -comment)
mtcars <- subset(mtcars, select = -c(year, -comment))
mtcars <- subset(mtcars, select = -c(year, comment))
mtcars$year <- c(1973, 1974)
View(mtcars)
View(mtcars)
mtcars <- subset(mtcars, select = -year)
mtcars$wt
cond <- mtcars$wt < 3
cond
mtcars$weight_class <- ifelse(cond, 'light', 'average')
mtcars$weight_class
cond <- mtcars$wt > 3.5
cond
mtcars$weight_class <- ifelse(cond, 'heavy', mtcars$weight_class)
mtcars$weight_class <- ifelse(cond, 'heavy', mtcars$weight_class)
mtcars$weight_class
rm(cond)
rm(efficient)
quizCars = subset(mtcars, mpg >= 30 | hp < 60)
quizCars
getwd()
setwd('~/data-analysis/lesson5_r_basic/2.12_factor_variables')
reddit <- read.csv('reddit.csv')
str(reddit)
reddit <- read.csv('reddit.csv', stringsAsFactors=FALSE)
str(reddit)
table(reddit$employment.status)
summary(reddit)
levels(reddit$age.range)
levels(reddit$age.range)
reddit
age <- levels(reddit$age.range)
age
reddit <- read.csv('reddit.csv')
levels(reddit$age.range)
levels(reddit$age.range)
qplot(data = reddit, x = age.range)
# setting levels of ordered factors solution
reddit$age.range <- ordered(reddit$age.range, levels = c('Under 18', '18 - 24', '25 - 34', '35 - 44', '45 - 54', '55 - 64', '65 or Above'))
qplot(data = reddit, x = age.range)
# setting levels of ordered factors solution
reddit$age.range <- ordered(reddit$age.range, levels = c('Under 18', '18-24', '25-34', '35-44', '45-54', '55-64', '65 or Above'))
qplot(data = reddit, x = age.range)
reddit <- read.csv('reddit.csv')
table(reddit$age.range)
qplot(data = reddit, x = age.range)
# setting levels of ordered factors solution
reddit$age.range <- ordered(reddit$age.range, levels = c('Under 18', '18-24', '25-34', '35-44', '45-54', '55-64', '65 or Above'))
qplot(data = reddit, x = age.range)
# alternate solution
reddit$age.range <- factor(reddit$age.range, levels = c('Under 18', '18-24', '25-34', '35-44', '45-54', '55-64', '65 or Above'), ordered = T)
qplot(data = reddit, x = age.range)
reddit <- read.csv('reddit.csv')
levels(reddit$age.range)
# alternate solution
reddit$age.range <- factor(reddit$age.range, levels = c('Under 18', '18-24', '25-34', '35-44', '45-54', '55-64', '65 or Above'), ordered = T)
qplot(data = reddit, x = age.range)
getwd()
pf <- read.delim('pseudo_facebook.tsv')
View(pf)
qplot(x = dob_day, data = pf)
qplot(x = dob_day, data = pf)
?scale_x_discrete
qplot(x = dob_day, data = pf) +
scale_x_discrete(break = 1:31)
qplot(x = dob_day, data = pf) +
scale_x_discrete(break = 1:31)
qplot(x = dob_day, data = pf) +
scale_x_discrete(break=1:31)
qplot(x = dob_day, data = pf) +
scale_x_discrete(breaks=1:31)
qplot(x = dob_day, data = pf) +
scale_x_continuous(breaks=1:31)
scale_x_continuous(breaks=1:31)
qplot(x = dob_day, data = pf) +
scale_x_continuous(breaks=1:31)
?scale_x_continuous
install.packages('ggthemes', dependencies = TRUE)
library(ggthemes)
theme_set(theme_minimal(24))
qplot(x = dob_day, data = pf) +
scale_x_continuous(breaks=1:31)
qplot(x = dob_day, data = pf) +
scale_x_continuous(breaks=1:31)
qplot(x = dob_day, data = pf) +
scale_x_continuous(breaks=1:31) +
facet_wrap(~dob_month, ncol = 3)
getwd()
pf <- read.delim('pseudo_facebook.tsv')
install.packages('ggplot2')
library(ggplot2)
install.packages('ggthemes', dependencies = TRUE)
library(ggthemes)
theme_set(theme_minimal(24))
qplot(x = dob_day, data = pf) +
scale_x_continuous(breaks=1:31)
install.packages("ggplot2")
install.packages("ggthemes", dependencies = TRUE)
install.packages("ggthemes", dependencies = TRUE)
